---
###
#
#控制器编译后，会在/devel/.private/baseline_walking_controller/lib/mc_controller/etc中生成.so文件，mc_rtc会自动识别读取
#
###


# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states"
# Where to look for state files
StatesFiles:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@/data"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states/data"
# If true, state factory will be more verbose
VerboseStateFactory: false


# 添加全局约束（General constraints, always on）
constraints:
  - type: contact
  - type: kinematics
    damper: [0.1, 0.01, 0.5]
  - type: compoundJoint

# 添加碰撞约束（Collision constraint）
collisions:
  - type: collision
    useMinimal: true
    
# Initial set of contacts
contacts: []


# 创建4个state及其配置文件
# Implement some additional text states
states:
  BWC::Initial_:         
    base: BWC::Initial   #base的作用：继承该state的配置文件

  BWC::GuiWalk_:
    base: BWC::GuiWalk

  BWC::Teleop_:
    base: BWC::Teleop
    configs:                      #配置文件
      twistTopicName: /cmd_vel

  BWC::Main_:
    base: Parallel
    states: [BWC::GuiWalk_, BWC::Teleop_]



#创建各个state的转换关系
# Transitions map
transitions:
  - [BWC::Initial_, OK, BWC::Main_, Auto]
# Initial state
init: BWC::Initial_

ObserverPipelines:
  name: MainObserverPipeline
  gui: true
  observers:
    - type: Encoder
    - type: Attitude
    - type: KinematicInertial
      config:
        anchorFrame:
          maxAnchorFrameDiscontinuity: 0.05 # [m]

controllerName: BWC

PostureTask:
  stiffness: 10

CoMTask:
  type: com
  stiffness: [1000.0, 1000.0, 1000.0]
  weight: 1000.0

BaseOrientationTask:
  type: orientation
  stiffness: 300.0
  weight: 500.0

FootTaskList:
  - type: firstOrderImpedance
    foot: Left
    frame: LeftFootCenter
    cutoffPeriod: 0.01
    weight: 1000.0
  - type: firstOrderImpedance
    foot: Right
    frame: RightFootCenter
    cutoffPeriod: 0.01
    weight: 1000.0

FootManager:
  name: FootManager
  footstepDuration: 0.8 # [sec]
  doubleSupportRatio: 0.125 # []
  deltaTransLimit: [0.15, 0.1, 12.5] # (x [m], y [m], theta [deg])
  midToFootTranss:
    Left:
      translation: [0, 0.105, 0] # [m]
    Right:
      translation: [0, -0.105, 0] # [m]
  footTaskGain:
    stiffness: 1000.0
  zmpHorizon: 2.0 # [sec]
  zmpOffset: [0, -0.02, 0] # (positive for x-forward, y-outside, z-upward) [m]
  defaultSwingTrajType: IndHorizontalVertical
  overwriteLandingPose: false
  stopSwingTrajForTouchDownFoot: true
  keepPoseForTouchDownFoot: false
  enableWrenchDistForTouchDownFoot: true
  enableArmSwing: false
  fricCoeff: 0.5
  touchDownRemainingDuration: 0.2 # [sec]
  touchDownPosError: 0.02 # [m]
  touchDownForceZ: 100 # [N]
  impedanceGains:
    SingleSupport:
      damper:
        linear: [300, 300, 300]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 2250]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 0]
        angular: [1, 1, 0]
    DoubleSupport:
      damper:
        linear: [300, 300, 1e4]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 0]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 1]
        angular: [1, 1, 0]
    Swing:
      damper:
        linear: [300, 300, 300]
        angular: [40, 40, 40]
      spring:
        linear: [2250, 2250, 2250]
        angular: [400, 400, 400]
      wrench:
        linear: [0, 0, 0]
        angular: [0, 0, 0]
  VelMode:
    footstepQueueSize: 3
    enableOnlineFootstepUpdate: true
  SwingTraj:
    CubicSplineSimple:
      withdrawDurationRatio: 0.25
      withdrawOffset: [0, 0, 0.015] # [m]
      approachDurationRatio: 0.25
      approachOffset: [0, 0, 0.015] # [m]
      swingOffset: [0, 0, 0.05] # [m]
    IndHorizontalVertical:
      withdrawDurationRatio: 0.25
      approachDurationRatio: 0.25
      verticalTopDurationRatio: 0.5
      verticalTopOffset: [0, 0, 0.05] # [m]
      tiltAngleWithdraw: 20 # [deg]
      tiltAngleApproach: 10 # [deg]
      tiltAngleWithdrawDurationRatio: 0.25
      tiltAngleApproachDurationRatio: 0.25
      tiltCenterWithdrawDurationRatio: 0.25
      tiltCenterApproachDurationRatio: 0.25
      tiltDistThre: 0.2 # [m]
      tiltForwardAngleThre: 10 # [deg]
    VariableTaskGain:
      withdrawDurationRatio: 0.25
      approachDurationRatio: 0.25
      verticalTopDurationRatio: 0.5
      verticalTopOffset: [0, 0, 0.05] # [m]
    LandingSearch:
      withdrawDurationRatio: 0.2
      withdrawOffset: [0, 0, 0.04] # [m]
      preApproachDurationRatio: 0.25
      approachDurationRatio: 0.2
      approachOffset: [0, 0, 0.04] # [m]

CentroidalManager:
  name: CentroidalManager
  useActualStateForMpc: false
  enableZmpFeedback: true
  enableComZFeedback: true
  dcmGainP: 2.0 # It must be greater than 1 to be stable
  zmpVelGain: 0.02
  comZGainP: 2000.0
  comZGainD: 500.0
  refComZ: 0.825 # [m]
  useTargetPoseForControlRobotAnchorFrame: true
  useActualComForWrenchDist: false
  wrenchDistConfig:
    wrenchWeight:
      linear: [1.0, 1.0, 1.0]
      angular: [1.0, 1.0, 1.0]
    regularWeight: 1e-8
    ridgeForceMinMax: [3, 1000] # [N]




  # 选择生成轨迹 的方法

  # 法一：预冠控制PreviewControlZmp
  method: PreviewControlZmp
  horizonDuration: 2.0 # [sec]
  horizonDt: 0.005 # [sec]

  #法二：Ddp法
  # # DdpZmp
  # method: DdpZmp
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.02 # [sec]
  # ddpMaxIter: 3

  #法三：规划脚法
  # # FootGuidedControl
  # method: FootGuidedControl
 
  #法四：mpc法
  # # IntrinsicallyStableMpc
  # method: IntrinsicallyStableMpc
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.02 # [sec]




# OverwriteConfigKeys: [NoSensors]
OverwriteConfigList:
  NoSensors:
    FootManager:
      impedanceGains:
        SingleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        DoubleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        Swing:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]



    #质心管理
    CentroidalManager:
      useActualStateForMpc: false
      enableZmpFeedback: false
      useActualComForWrenchDist: false





robots:
  # Environment models
  ground:
    module: env/ground    //添加地面

  # Robot-specific configurations  机器人特定的配置文件
  walker:

  #姿势任务相关关节的设定
    #PostureTask:
    #  jointWeights:
    #    WAIST_R: 10
    #    WAIST_P: 10

  # For arm swing 用于手臂的摆动
    #  jointGains:
    #    - jointName: R_SHOULDER_P
    #      stiffness: 400
    #    - jointName: L_SHOULDER_P
    #      stiffness: 400

    # 质心任务相关关节的设定
    CoMTask:
      activeJoints: [
      "Root",
      "left_leg_j1", "left_leg_j2", "left_leg_j3", "left_leg_j4", "left_leg_j5", "left_leg_j6",
      "right_leg_j1", "right_leg_j2", "right_leg_j3", "right_leg_j4", "right_leg_j5", "right_leg_j6"]

    #基座朝向相关的设定
    BaseOrientationTask:
      frame: base_link

    FootManager:
      enableArmSwing: false
      jointAnglesForArmSwing:
        Left:
          R_SHOULDER_P: [-0.13962634015954636] # -8
          L_SHOULDER_P: [0.06981317007977318] # 4
        Right:
          R_SHOULDER_P: [0.06981317007977318] # 4
          L_SHOULDER_P: [-0.13962634015954636] # -8
