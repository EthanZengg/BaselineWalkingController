---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states"
# Where to look for state files
StatesFiles:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@/data"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states/data"
# If true, state factory will be more verbose
VerboseStateFactory: false

# General constraints, always on
constraints:
  - type: contact
  - type: kinematics
    damper: [0.1, 0.01, 0.5]
  - type: compoundJoint

# Collision constraint
collisions:
  - type: collision
    useMinimal: true
# Initial set of contacts
contacts: []

# Implement some additional text states
states:
  BWC::Initial_:
    base: BWC::Initial

  BWC::GuiWalk_:
    base: BWC::GuiWalk

  BWC::Teleop_:
    base: BWC::Teleop
    configs:
      twistTopicName: /cmd_vel

  BWC::Main_:
    base: Parallel
    states: [BWC::GuiWalk_, BWC::Teleop_]

# state之间的转换关系
transitions:
  - [BWC::Initial_, OK, BWC::Main_, Auto]
# Initial state
init: BWC::Initial_

ObserverPipelines:
  name: MainObserverPipeline
  gui: true
  observers:
    - type: Encoder
    - type: Attitude
    - type: KinematicInertial
      config:
        anchorFrame:
          maxAnchorFrameDiscontinuity: 0.05 # [m]

controllerName: BWC

#设置姿势任务的配置文件
PostureTask:
  stiffness: 10

#设置质心任务的配置文件
CoMTask:
  type: com
  stiffness: [1000.0, 1000.0, 1000.0]
  weight: 1000.0

#设置OrientationTask的配置文件
BaseOrientationTask:
  type: orientation
  stiffness: 300.0
  weight: 500.0

#设置脚步任务的配置文件（在BaselineWalkingController.cpp中会读取所有任务配置）
FootTaskList:
  - type: firstOrderImpedance  #脚部任务的类型
    foot: Left                                      #该任务应用与左脚
    frame: LeftFootCenter           #设置任务的参考坐标系
    cutoffPeriod: 0.01                    #截至频率
    weight: 1000.0                           #任务权重
  - type: firstOrderImpedance
    foot: Right
    frame: RightFootCenter
    cutoffPeriod: 0.01
    weight: 1000.0


FootManager:
  name: FootManager                                 #管理者名称
  footstepDuration: 0.8                                #每一步的时间[s]
  doubleSupportRatio: 0.125                   # 双足支撑时间的比例
  deltaTransLimit: [0.15, 0.1, 12.5]         #位置变化极限 (x [m], y [m], theta [deg])
  midToFootTranss:
    Left:
      translation: [0, 0.125, 0]                      # 中心点到左脚距离[m]
    Right:
      translation: [0, -0.125, 0]                    # 中心点到右脚距离[m]
  footTaskGain:
    stiffness: 1000.0
  zmpHorizon: 2.0                                         # 预测时间？[sec]
  zmpOffset: [0, -0.02, 0]                            # ZMP偏移量(positive for x-forward, y-outside, z-upward) [m]
  defaultSwingTrajType: IndHorizontalVertical    #用于指定摆动腿的默认轨迹，这里用的是水平和垂直相互独立的方式
  overwriteLandingPose: false                                     #是否覆盖着陆姿势
  stopSwingTrajForTouchDownFoot: true              #触地脚着地时是否停止当前的摆动轨迹
  keepPoseForTouchDownFoot: false                      #触地脚着地时是否保持当前的姿势
  enableWrenchDistForTouchDownFoot: true     #触地脚接触地面时是否考虑力矩的分布情况
  enableArmSwing: false                                               #是否摆臂
  fricCoeff: 0.5                                                                    #摩擦系数
  touchDownRemainingDuration: 0.2                     # 接触到地面后的剩余时间[sec]   
  touchDownPosError: 0.02                                         # 接触到地面时的位置误差[m]
  touchDownForceZ: 100                                               # 接触到地面时的力的垂直分量[N]
  impedanceGains:
    SingleSupport:
      damper:
        linear: [300, 300, 300]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 2250]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 0]
        angular: [1, 1, 0]
    DoubleSupport:
      damper:
        linear: [300, 300, 1e4]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 0]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 1]
        angular: [1, 1, 0]
    Swing:
      damper:
        linear: [300, 300, 300]
        angular: [40, 40, 40]
      spring:
        linear: [2250, 2250, 2250]
        angular: [400, 400, 400]
      wrench:
        linear: [0, 0, 0]
        angular: [0, 0, 0]
  VelMode:
    footstepQueueSize: 3
    enableOnlineFootstepUpdate: true
  SwingTraj:                  #加载摆动轨迹的参数
    CubicSplineSimple:  #法一：三次样条曲线法
      withdrawDurationRatio: 0.25
      withdrawOffset: [0, 0, 0.015] # [m]
      approachDurationRatio: 0.25
      approachOffset: [0, 0, 0.015] # [m]
      swingOffset: [0, 0, 0.05] # [m]
    IndHorizontalVertical:                #法二：独立的水平和垂直方向控制
      withdrawDurationRatio: 0.25
      approachDurationRatio: 0.25
      verticalTopDurationRatio: 0.5
      verticalTopOffset: [0, 0, 0.05] # [m]
      tiltAngleWithdraw: 20 # [deg]
      tiltAngleApproach: 10 # [deg]
      tiltAngleWithdrawDurationRatio: 0.25
      tiltAngleApproachDurationRatio: 0.25
      tiltCenterWithdrawDurationRatio: 0.25
      tiltCenterApproachDurationRatio: 0.25
      tiltDistThre: 0.2 # [m]
      tiltForwardAngleThre: 10 # [deg]
    VariableTaskGain:
      withdrawDurationRatio: 0.25
      approachDurationRatio: 0.25
      verticalTopDurationRatio: 0.5
      verticalTopOffset: [0, 0, 0.05] # [m]
    LandingSearch:
      withdrawDurationRatio: 0.2
      withdrawOffset: [0, 0, 0.04] # [m]
      preApproachDurationRatio: 0.25
      approachDurationRatio: 0.2
      approachOffset: [0, 0, 0.04] # [m]


#质心管理器
CentroidalManager:
  name: CentroidalManager
  useActualStateForMpc: false
  enableZmpFeedback: true
  enableComZFeedback: true
  dcmGainP: 2.0 # It must be greater than 1 to be stable
  zmpVelGain: 0.02
  comZGainP: 2000.0
  comZGainD: 500.0
  refComZ: 0.6 # 参考质心高度[m]参考质心高度[m]参考质心高度[m]参考质心高度[m]参考质心高度[m]参考质心高度[m]参考质心高度[m]
  useTargetPoseForControlRobotAnchorFrame: true
  useActualComForWrenchDist: false
  wrenchDistConfig:
    wrenchWeight:
      linear: [1.0, 1.0, 1.0]
      angular: [1.0, 1.0, 1.0]
    regularWeight: 1e-8
    ridgeForceMinMax: [3, 1000] # [N]

  # 采用预冠控制的的方法生成质心
  method: PreviewControlZmp
  horizonDuration: 2.0 # [sec]
  horizonDt: 0.005 # [sec]

  # # DdpZmp
  # method: DdpZmp
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.02 # [sec]
  # ddpMaxIter: 3

  # # FootGuidedControl
  # method: FootGuidedControl

  # # IntrinsicallyStableMpc
  # method: IntrinsicallyStableMpc
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.02 # [sec]


# OverwriteConfigKeys: [NoSensors]
OverwriteConfigList:
  NoSensors:
    FootManager:
      impedanceGains:
        SingleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        DoubleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        Swing:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]

    CentroidalManager:
      useActualStateForMpc: false
      enableZmpFeedback: false
      useActualComForWrenchDist: false


robots:
  # Environment models
  ground:
    module: env/ground


#walker相关的配置文件
  walker:

  #姿势任务相关关节的设定
    PostureTask:
    #  jointWeights:
    #    WAIST_R: 10
    #    WAIST_P: 10
  # For arm swing 用于手臂的摆动
      jointGains:
        - jointName: right_limb_j1
          stiffness: 400
        - jointName: left_limb_j1
          stiffness: 400


    # 质心任务相关关节的设定
    CoMTask:
      activeJoints: [
      "Root",
       "left_leg_j1", "left_leg_j2", "left_leg_j3", "left_leg_j4", "left_leg_j5", "left_leg_j6",
      "right_leg_j1", "right_leg_j2", "right_leg_j3", "right_leg_j4", "right_leg_j5", "right_leg_j6"]

    #基座朝向相关的设定
    BaseOrientationTask:
      frame: base_link

    FootManager:
      enableArmSwing: true
      jointAnglesForArmSwing:
        Left:
          right_limb_j1: [-0.13962634015954636] # -8
          left_limb_j1: [0.06981317007977318] # 4
        Right:
          right_limb_j1: [0.06981317007977318] # 4
          left_limb_j1: [-0.13962634015954636] # -8



  # JVRC的配置文件
  jvrc1:
    #PostureTask:
    #  jointWeights:
    #    WAIST_R: 10
    #    WAIST_P: 10
      # For arm swing
    #  jointGains:
    #    - jointName: R_SHOULDER_P
    #      stiffness: 400
    #    - jointName: L_SHOULDER_P
    #      stiffness: 400

    CoMTask:
      activeJoints: [
      "Root",
      "R_HIP_Y", "R_HIP_R", "R_HIP_P", "R_KNEE", "R_ANKLE_P", "R_ANKLE_R",
      "L_HIP_Y", "L_HIP_R", "L_HIP_P", "L_KNEE", "L_ANKLE_P", "L_ANKLE_R"]

    BaseOrientationTask:
      frame: PELVIS_S    
     # frame: WAIST_R_S

    FootManager:
      enableArmSwing: false
      #jointAnglesForArmSwing:
      #  Left:
      #    R_SHOULDER_P: [-0.13962634015954636] # -8
      #    L_SHOULDER_P: [0.06981317007977318] # 4
      #  Right:
      #    R_SHOULDER_P: [0.06981317007977318] # 4
      #    L_SHOULDER_P: [-0.13962634015954636] # -8
